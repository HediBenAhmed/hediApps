{
  "_args": [
    [
      {
        "raw": "mt-downloader@2.2.1",
        "scope": null,
        "escapedName": "mt-downloader",
        "name": "mt-downloader",
        "rawSpec": "2.2.1",
        "spec": "2.2.1",
        "type": "version"
      },
      "C:\\Users\\Hedi\\workspace\\hediapps-web\\node_modules\\angular-ide"
    ]
  ],
  "_from": "mt-downloader@2.2.1",
  "_id": "mt-downloader@2.2.1",
  "_inCache": true,
  "_location": "/mt-downloader",
  "_nodeVersion": "6.3.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/mt-downloader-2.2.1.tgz_1468565748660_0.9515152897220105"
  },
  "_npmUser": {
    "name": "tusharmathur",
    "email": "tusharmath@gmail.com"
  },
  "_npmVersion": "2.15.9",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mt-downloader@2.2.1",
    "scope": null,
    "escapedName": "mt-downloader",
    "name": "mt-downloader",
    "rawSpec": "2.2.1",
    "spec": "2.2.1",
    "type": "version"
  },
  "_requiredBy": [
    "/angular-ide"
  ],
  "_resolved": "https://registry.npmjs.org/mt-downloader/-/mt-downloader-2.2.1.tgz",
  "_shasum": "a6a66642827d76262f64fc540cdb283238b4237c",
  "_shrinkwrap": null,
  "_spec": "mt-downloader@2.2.1",
  "_where": "C:\\Users\\Hedi\\workspace\\hediapps-web\\node_modules\\angular-ide",
  "author": {
    "name": "Tushar Mathur",
    "email": "tusharmath@gmail.com",
    "url": "http://tusharm.com"
  },
  "ava": {
    "require": "babel-register"
  },
  "babel": {
    "plugins": [
      "transform-es2015-modules-commonjs"
    ]
  },
  "bin": {
    "mtd": ".dist/bin/mtd.js"
  },
  "bugs": {
    "url": "https://github.com/tusharmath/Multi-threaded-downloader/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "commit-msg": "validate-commit-msg"
    },
    "validate-commit-msg": {
      "types": [
        "feat",
        "fix",
        "docs",
        "style",
        "refactor",
        "perf",
        "test",
        "chore",
        "revert"
      ]
    }
  },
  "dependencies": {
    "graceful-fs": "^4.1.3",
    "humanize-plus": "^1.8.1",
    "meow": "^3.7.0",
    "muxer": "^1.0.1",
    "progress": "^1.1.8",
    "ramda": "^0.21.0",
    "request": "^2.60.0",
    "rx": "^4.0.7",
    "valid-url": "^1.0.9"
  },
  "description": "resumable multi-threaded download over http/https",
  "devDependencies": {
    "ava": "^0.15.0",
    "babel-cli": "^6.9.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.8.0",
    "babel-register": "^6.9.0",
    "coveralls": "^2.11.9",
    "cz-conventional-changelog": "^1.1.5",
    "eslint": "^3.0.0",
    "express": "^4.13.1",
    "ghooks": "^1.0.3",
    "jsdoc-to-markdown": "^1.3.6",
    "nyc": "^7.0.0",
    "semantic-release": "^4.3.5",
    "sinon": "^1.17.4",
    "snazzy": "^4.0.0",
    "standard": "^7.0.1",
    "validate-commit-msg": "^2.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "a6a66642827d76262f64fc540cdb283238b4237c",
    "tarball": "https://registry.npmjs.org/mt-downloader/-/mt-downloader-2.2.1.tgz"
  },
  "engines": {
    "node": ">= 5.0.0"
  },
  "gitHead": "39d6074f22fd7fd69203ad967f6050cdbe201644",
  "homepage": "https://github.com/tusharmath/Multi-threaded-downloader#readme",
  "keywords": [
    "segmented",
    "file",
    "transfer",
    "protocol",
    "stop",
    "resume",
    "http",
    "download",
    "threads",
    "downloader",
    "multi-threaded",
    "manager"
  ],
  "license": "MIT",
  "main": ".dist/index.js",
  "maintainers": [
    {
      "name": "tusharmathur",
      "email": "tusharmath@gmail.com"
    }
  ],
  "name": "mt-downloader",
  "optionalDependencies": {},
  "publishConfig": {
    "tag": "next"
  },
  "readme": "# mt-downloader\n\n[![Join the chat at https://gitter.im/tusharmath/Multi-threaded-downloader](https://badges.gitter.im/tusharmath/Multi-threaded-downloader.svg)](https://gitter.im/tusharmath/Multi-threaded-downloader?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.org/tusharmath/Multi-threaded-downloader.svg?branch=master)](https://travis-ci.org/tusharmath/Multi-threaded-downloader)\n[![npm](https://img.shields.io/npm/v/mt-downloader.svg)](https://www.npmjs.com/package/mt-downloader)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Coverage Status](https://coveralls.io/repos/github/tusharmath/Multi-threaded-downloader/badge.svg)](https://coveralls.io/github/tusharmath/Multi-threaded-downloader)\n\nThis is a nodejs based utility library that helps in performing **resumable**, **multi-threaded** downloads over Http. The module is highly inspired by Speedbit's — [Download Accelerator Plus](http://www.speedbit.com/dap/).\n\n\n## Features\n0. **Multi connection downloads:** In a conventional download we don't completely utilize our bandwidth. With multiple connections there is always one thread which is getting data thus minimizing the wait period between data packets. **This doesn't mean that we will be able to download faster than what our ISP allows**.\n\n0. **Stop and start from the last downloaded byte:** You don't have to worry about internet getting disconnected or your computer shutting down while downloading. You can quite easily start from the last byte that was downloaded.\n\n0. **Console application:** If installed globally, `mtd` command would be available.\n\n## Installation\n\nThe conventional npm installation process needs to be followed.\n\n```bash\nnpm install mt-downloader --save\n```\n\n## CLI Installation\n\n```bash\n$ npm install -g mt-downloader\n$ mtd --help\n```\n\n## Objects\n\n* [FILE](#FILE) : <code>object</code>\n    * [.open(params$)](#FILE.open) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.fstat(params$)](#FILE.fstat) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.read(params$)](#FILE.read) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.write(params$)](#FILE.write) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.close(params$)](#FILE.close) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.truncate(params$)](#FILE.truncate) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.rename(params$)](#FILE.rename) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n* [HTTP](#HTTP) : <code>object</code>\n    * [.request(params)](#HTTP.request) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n\n## Functions\n\n* [CreateMTDFile(options)](#CreateMTDFile) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n* [DownloadFromMTDFile(mtdPath, [meta])](#DownloadFromMTDFile) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n* [FinalizeDownload(params)](#FinalizeDownload) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n* [Completion(meta$)](#Completion) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n\n<a name=\"FILE\"></a>\n\n## FILE : <code>object</code>\nProvides wrappers over the async utils inside the\n[fs module](https://nodejs.org/api/fs.html).\nThe wrappers take in an input stream of arguments\nand returns the result of function call as another stream.\n\n**Kind**: global namespace  \n\n* [FILE](#FILE) : <code>object</code>\n    * [.open(params$)](#FILE.open) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.fstat(params$)](#FILE.fstat) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.read(params$)](#FILE.read) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.write(params$)](#FILE.write) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.close(params$)](#FILE.close) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.truncate(params$)](#FILE.truncate) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n    * [.rename(params$)](#FILE.rename) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n\n<a name=\"FILE.open\"></a>\n\n### FILE.open(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.fstat\"></a>\n\n### FILE.fstat(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback](https://nodejs.org/api/fs.html#fs_fs_open_path_flags_mode_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.read\"></a>\n\n### FILE.read(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_read_fd_buffer_offset_length_position_callback](https://nodejs.org/api/fs.html#fs_fs_read_fd_buffer_offset_length_position_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.write\"></a>\n\n### FILE.write(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_write_fd_buffer_offset_length_position_callback](https://nodejs.org/api/fs.html#fs_fs_write_fd_buffer_offset_length_position_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.close\"></a>\n\n### FILE.close(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_close_fd_callback](https://nodejs.org/api/fs.html#fs_fs_close_fd_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.truncate\"></a>\n\n### FILE.truncate(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_truncate_path_len_callback](https://nodejs.org/api/fs.html#fs_fs_truncate_path_len_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"FILE.rename\"></a>\n\n### FILE.rename(params$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\n[https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback](https://nodejs.org/api/fs.html#fs_fs_rename_oldpath_newpath_callback)\n\n**Kind**: static method of <code>[FILE](#FILE)</code>  \n\n| Param | Type |\n| --- | --- |\n| params$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | \n\n<a name=\"HTTP\"></a>\n\n## HTTP : <code>object</code>\n**Kind**: global namespace  \n<a name=\"HTTP.request\"></a>\n\n### HTTP.request(params) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\nStream based wrapper over [npm/request](https://www.npmjs.com/package/request)\n\n**Kind**: static method of <code>[HTTP](#HTTP)</code>  \n**Returns**: <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> - multiplex stream  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| params | <code>object</code> | [ request](https://www.npmjs.com/package/request) module params. |\n\n<a name=\"CreateMTDFile\"></a>\n\n## CreateMTDFile(options) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\nCreates a new .mtd file that is a little larger in size than the original\nfile. The file is initially empty and has all the relevant meta\ninformation regarding the download appended to the end.\n\n**Kind**: global function  \n**Returns**: <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> - A [multiplexed stream](https://github.com/tusharmath/muxer) containing ~\n- `written$` - Bytes being saved on disk.\n- `meta$` - Meta information about the download.\n- `remoteFileSize$` - Size of the content that is to be downloaded.\n- `fdW$` - File descriptor in `w` mode.  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| options | <code>object</code> |  | The `options` must have `mtdPath` and `url`. |\n| options.url | <code>string</code> |  | Download url. |\n| options.path | <code>string</code> |  | Relative path where the file needs to be saved. |\n| [options.range] | <code>number</code> | <code>3</code> | Number of concurrent downloads. |\n| [options.metaWrite] | <code>number</code> | <code>300</code> | Throttles the write frequency of meta data. |\n\n<a name=\"DownloadFromMTDFile\"></a>\n\n## DownloadFromMTDFile(mtdPath, [meta]) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\nReads a `.mtd` file and resumes the download from the last successfully saved\nbyte.\n\n**Kind**: global function  \n**Returns**: <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> - A [multiplexed stream](https://github.com/tusharmath/muxer) containing ~\n- `metaWritten$` - Meta data buffer stream.\n- `response$` - HTTP response object.\n- `responses$` - List of all the HTTP response objects.\n- `localFileSize$` - Size of the `.mtd` file on disk.\n- `fdR$` - File Descriptor in `r+` mode.\n- `meta$` - Download meta information.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| mtdPath | <code>String</code> | Relative path to the `.mtd` file. |\n| [meta] | <code>Object</code> | Optional meta data to override the one that's being loaded from the `.mtd` file. |\n\n<a name=\"FinalizeDownload\"></a>\n\n## FinalizeDownload(params) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\nRemoves the meta information and the `.mtd` extension from the file once the\ndownload is successfully completed.\n\n**Kind**: global function  \n**Returns**: <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> - A [multiplexed stream](https://github.com/tusharmath/muxer) containing ~\n- `truncated$` - Fired when the meta data is removed.\n- `renamed$` - Fired when the `.mtd` extension is removed.  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| params | <code>object</code> | `{fd$, meta$}` |\n| params.fd$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | File descriptor Observable |\n| params.meta$ | <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> | Download meta information |\n\n<a name=\"Completion\"></a>\n\n## Completion(meta$) ⇒ <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code>\nUtil method that calculates the total completion percentage (between 0-100).\n\n**Kind**: global function  \n**Returns**: <code>[Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)</code> - Value between 0-100  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| meta$ | <code>Observable</code> | Meta data stream ie. exposed by [DownloadFromMTDFile](#DownloadFromMTDFile) |\n\n\n## .mtd file\nOnce the download starts the library will create a file with a **.mtd** extension. This file contains some meta information related to the download and is a little bigger *(around 4kb)* than the original file size. The **.mtd** file can be used later to restart downloads from where the last byte that was downloaded. After the download is completed the downloader will truncate the `.mtd` file to remove that meta information.\n\n## Releases\nThere are two release channels viz. — `latest` and `next`. The `next` is unstable and must be used with caution.\n\n**Latest**\n```bash\nnpm i mt-downloader\n```\n**Next**\n```bash\nnpm i mt-downloader@next\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tusharmath/Multi-threaded-downloader.git"
  },
  "scripts": {
    "build": "babel src --out-dir .dist --source-maps true",
    "coverage": "nyc npm test && nyc report --reporter=text-lcov | coveralls",
    "doc": "jsdoc2md ./src/** --global-index-format grouped --template README.template.md > README.md",
    "lint": "standard --verbose | snazzy",
    "prepublish": "npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "ava"
  },
  "standard": {
    "ignore": [
      "test/integration/**"
    ]
  },
  "version": "2.2.1"
}
