{
  "_args": [
    [
      {
        "raw": "muxer@^1.0.1",
        "scope": null,
        "escapedName": "muxer",
        "name": "muxer",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Hedi\\workspace\\hediapps-web\\node_modules\\mt-downloader"
    ]
  ],
  "_from": "muxer@>=1.0.1 <2.0.0",
  "_id": "muxer@1.0.1",
  "_inCache": true,
  "_location": "/muxer",
  "_nodeVersion": "6.2.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/muxer-1.0.1.tgz_1464283935240_0.8981334366835654"
  },
  "_npmUser": {
    "name": "tusharmathur",
    "email": "tusharmath@gmail.com"
  },
  "_npmVersion": "2.15.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "muxer@^1.0.1",
    "scope": null,
    "escapedName": "muxer",
    "name": "muxer",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mt-downloader"
  ],
  "_resolved": "https://registry.npmjs.org/muxer/-/muxer-1.0.1.tgz",
  "_shasum": "0903712db9aa529389368f129b4b96bfc07e255b",
  "_shrinkwrap": null,
  "_spec": "muxer@^1.0.1",
  "_where": "C:\\Users\\Hedi\\workspace\\hediapps-web\\node_modules\\mt-downloader",
  "author": {
    "name": "tushar mathur",
    "email": "tusharmath@gmail.com"
  },
  "ava": {
    "require": "babel-register",
    "babel": "inherit"
  },
  "babel": {
    "plugins": [
      "transform-object-rest-spread"
    ],
    "presets": [
      "es2015"
    ]
  },
  "bugs": {
    "url": "https://github.com/tusharmath/muxer/issues"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {
    "rx": "^4.1.0"
  },
  "description": "stream multiplexer for es6 observables",
  "devDependencies": {
    "ava": "^0.15.1",
    "babel-cli": "^6.9.0",
    "babel-plugin-transform-object-rest-spread": "^6.8.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-register": "^6.9.0",
    "cz-conventional-changelog": "^1.1.6",
    "jsdoc-to-markdown": "^1.3.6",
    "semantic-release": "^4.3.5"
  },
  "directories": {},
  "dist": {
    "shasum": "0903712db9aa529389368f129b4b96bfc07e255b",
    "tarball": "https://registry.npmjs.org/muxer/-/muxer-1.0.1.tgz"
  },
  "gitHead": "920eb6ce1438edc0331a142dffb2b6a052ec3a1c",
  "homepage": "https://github.com/tusharmath/muxer#readme",
  "keywords": [
    "mux",
    "demux",
    "multiplex",
    "demultiplex",
    "observable",
    "stream"
  ],
  "license": "ISC",
  "main": "dist/muxer.js",
  "maintainers": [
    {
      "name": "tusharmathur",
      "email": "tusharmath@gmail.com"
    }
  ],
  "name": "muxer",
  "optionalDependencies": {},
  "readme": "# muxer\n[![Build Status][travis-svg]][travis]\n[![npm][npm-svg]][npm]\n[![semantic-release][semantic-release-svg]][semantic-release]\n\n[travis-svg]:           https://travis-ci.org/tusharmath/muxer.svg?branch=master\n[travis]:               https://travis-ci.org/tusharmath/muxer\n[semantic-release-svg]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\n[semantic-release]:     https://github.com/semantic-release/semantic-release\n[npm-svg]:              https://img.shields.io/npm/v/muxer.svg\n[npm]:                  https://www.npmjs.com/package/muxer\n\n\nA simple multiplexer utility of RxJS based streams.\n\n### Installation\n```\nnpm install muxer --save\n```\n\n### Example\n\n```javascript\nimport {Observable as O} from 'rx'\nimport {mux, demux} from 'muxer'\n\n\nfunction create$ () {\n  const interval$ = O.interval(1000)\n  const mod2$ = interval$.filter(x => x%2 === 0).map(2) \n  const mod3$ = interval$.filter(x => x%3 === 0).map(3)\n  const mod7$ = interval$.filter(x => 7%3 === 0).map(7)\n  mux({mod2$, mod3$})\n} \n \n// Create a single stream that contains events from each of the individual streams \nconst mod$ = create$() \nconst [{mod2$}, rest$] = demux(mod$, 'mod2$')\n\nmod2$.subscribe(x => console.log('MOD2', x))\nrest$.subscribe(x => console.log('REST', x))\n```\n\n## Functions\n\n* [mux(sources)](#mux) ⇒ <code>[Observable](#external_Observable)</code>\n* [demux(source$, ...keys)](#demux) ⇒ <code>Array</code>\n\n## External\n\n* [Observable](#external_Observable)\n\n<a name=\"mux\"></a>\n\n## mux(sources) ⇒ <code>[Observable](#external_Observable)</code>\nCreates a multiplexed stream from all the input streams\n\n**Kind**: global function  \n**Returns**: <code>[Observable](#external_Observable)</code> - Multiplexed stream  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| sources | <code>Object</code> | Dictionary of source streams. |\n\n<a name=\"demux\"></a>\n\n## demux(source$, ...keys) ⇒ <code>Array</code>\nDe-multiplexes the source stream\n\n**Kind**: global function  \n**Returns**: <code>Array</code> - Tuple of the selected streams and the rest of them  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| source$ | <code>[Observable](#external_Observable)</code> | Input multiplexed stream |\n| ...keys | <code>String</code> | Map of source streams |\n\n<a name=\"external_Observable\"></a>\n\n## Observable\nAn observable is an interface that provides a generalized mechanism for push-based notification,\nalso known as observer design pattern.\n\n**Kind**: global external  \n**See**: [RxJS Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md)  \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tusharmath/muxer.git"
  },
  "scripts": {
    "build": "babel src --out-dir dist",
    "doc": "jsdoc2md src/** --global-index-format grouped --template README.template.md > README.md",
    "prepublish": "npm run build",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "test": "ava"
  },
  "version": "1.0.1"
}
