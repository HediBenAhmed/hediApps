<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<!-- SPRING SECURITY SETUP -->
	<http entry-point-ref="unauthorizedEntryPoint"
		authentication-manager-ref="authenticationManager" create-session="stateless">
		<csrf disabled="true" />
		<custom-filter ref="authenticationTokenProcessingFilter"
			position="PRE_AUTH_FILTER" />
		<intercept-url pattern="/rest/loginService/**" access="permitAll" />
		<intercept-url pattern="/rest/users/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/rest/datas/**" access="hasRole('ADMIN')" />
		<intercept-url pattern="/rest/tasks/**" access="hasRole('ADMIN')" />
	</http>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>

	<authentication-manager id="authenticationManager">
		<authentication-provider user-service-ref="userService">
			<password-encoder ref="passwordEncoder" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="unauthorizedEntryPoint" class="com.hediapps.rest.UnauthorizedEntryPoint" />

	<beans:bean id="authenticationTokenProcessingFilter"
		class="com.hediapps.rest.AuthenticationTokenProcessingFilter">
		<beans:constructor-arg ref="userService" />
	</beans:bean>

</beans:beans>